//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.09.28 at 08:25:11 AM BST 
//


package com.concurrentperformance.ringingmaster.persist.generated.v1;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for baseNotationType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="baseNotationType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.ringingmaster.org.uk/touch/v1}notationKeyType">
 *       &lt;attribute name="notation" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="notation2" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="foldedPalindrome" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "baseNotationType")
@XmlSeeAlso({
    LibraryNotationType.class,
    TouchNotationPersist.class
})
public abstract class BaseNotationType
    extends NotationKeyType
{

    @XmlAttribute(name = "notation", required = true)
    protected String notation;
    @XmlAttribute(name = "notation2")
    protected String notation2;
    @XmlAttribute(name = "foldedPalindrome")
    protected Boolean foldedPalindrome;

    /**
     * Gets the value of the notation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNotation() {
        return notation;
    }

    /**
     * Sets the value of the notation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNotation(String value) {
        this.notation = value;
    }

    /**
     * Gets the value of the notation2 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNotation2() {
        return notation2;
    }

    /**
     * Sets the value of the notation2 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNotation2(String value) {
        this.notation2 = value;
    }

    /**
     * Gets the value of the foldedPalindrome property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isFoldedPalindrome() {
        if (foldedPalindrome == null) {
            return false;
        } else {
            return foldedPalindrome;
        }
    }

    /**
     * Sets the value of the foldedPalindrome property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setFoldedPalindrome(Boolean value) {
        this.foldedPalindrome = value;
    }

}
